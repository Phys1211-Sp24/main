(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110024,       2279]
NotebookOptionsPosition[    104038,       2192]
NotebookOutlinePosition[    104465,       2209]
CellTagsIndexPosition[    104422,       2206]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.811595597629109*^9},ExpressionUUID->"0e5bcdbe-e139-4030-882a-\
78bdbe3a3354"],

Cell[CellGroupData[{

Cell["Calculus", "Section",
 CellChangeTimes->{{3.8115226467366476`*^9, 
  3.8115226524838505`*^9}},ExpressionUUID->"3c2b8110-8fe5-4e33-a55c-\
a7c477a550e9"],

Cell["\<\
Mathematica is an efficient tool that can analytically or numerically \
differentiate, integrate, and solve differential equations.  \
\>", "Text",
 CellChangeTimes->{{3.8115226467366476`*^9, 3.8115227685371447`*^9}, {
  3.8115238574907017`*^9, 
  3.81152385850124*^9}},ExpressionUUID->"68b97a41-515e-4f86-aab1-\
b85301d11d3e"],

Cell[CellGroupData[{

Cell["Differentiation", "Subsection",
 CellChangeTimes->{{3.8115226467366476`*^9, 3.8115227685371447`*^9}, {
  3.8115238574907017`*^9, 
  3.8115238704244823`*^9}},ExpressionUUID->"da9d893b-a823-4cf0-95ec-\
03013386f495"],

Cell[BoxData[{
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "+", 
    FractionBox["1", "x"]}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"4", ",", "x"}], "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8115226765254364`*^9, 3.8115226777191677`*^9}, {
  3.8115227704438186`*^9, 3.8115227713139424`*^9}, {3.8115232018001857`*^9, 
  3.81152324496972*^9}, {3.811523511221219*^9, 3.811523517785137*^9}, {
  3.8115235521785564`*^9, 3.8115236564622927`*^9}, {3.8115236952313905`*^9, 
  3.811523697690488*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d777dd1b-aade-45d7-a3d1-b098fc74a0de"],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x"}], "-", "1"}], 
    RowBox[{"x", "+", 
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8115226765254364`*^9, 3.8115226777191677`*^9}, {
  3.8115227704438186`*^9, 3.8115227713139424`*^9}, {3.8115232018001857`*^9, 
  3.81152324496972*^9}, {3.811523511221219*^9, 3.811523517785137*^9}, {
  3.8115235521785564`*^9, 3.8115235550910883`*^9}, {3.811524022258669*^9, 
  3.811524036306492*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"323a9c41-9e44-4956-a7e8-c69b21c083ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"b", " ", "x"}], "-", "1"}], 
     RowBox[{"x", "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8115235356768937`*^9, 3.8115235405386515`*^9}, 
   3.8115240500322976`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"ebf00bf5-ddee-416a-90b7-ea15250263a1"],

Cell[BoxData[
 StyleBox["Integration", "Subsection"]], "Input",
 CellChangeTimes->{{3.8115238753186436`*^9, 
  3.8115238777480645`*^9}},ExpressionUUID->"24fee88f-d6d5-4fd3-b920-\
e12cbccc2827"],

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tan", "[", "x", "]"}], "+", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811523888386094*^9, 3.8115239243881836`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2508b9a9-aacb-4626-a050-2c7dfa2b9aa3"],

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"k", " ", "Q", " ", "x"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "+", " ", 
       SuperscriptBox["y", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"k", " ", "Q", " ", "x"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "+", " ", 
       SuperscriptBox["y", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.811523929779092*^9, 3.8115240141898403`*^9}, {
  3.8115240630278807`*^9, 3.8115241104723306`*^9}, {3.811524142304098*^9, 
  3.811524252475625*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"61cb2c26-f78e-4c62-9f0c-1bc1f2c378cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential Equations", "Subsection",
 CellChangeTimes->{{3.811524385891987*^9, 3.8115244131017838`*^9}, {
  3.811596940064386*^9, 
  3.8115969424303045`*^9}},ExpressionUUID->"8ba01efd-8b8d-47c6-aeb4-\
f398f9565210"],

Cell["\<\
You can solve differential equations analytically or numerically. Look at the \
solution to Bessel\[CloseCurlyQuote]s equation, which appears in various \
physical phenomena from diffraction from helical objects like DNA to \
vibrational modes of circular acoustic membranes (drums!)\
\>", "Text",
 CellChangeTimes->{{3.811524385891987*^9, 3.8115244131017838`*^9}, {
  3.811596940064386*^9, 3.8115969679025564`*^9}, {3.811597010728101*^9, 
  3.811597088814309*^9}},ExpressionUUID->"11565571-9be4-4203-9694-\
5928d8f8e223"],

Cell[BoxData[
 RowBox[{"solB", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["2", "2"]}], ")"}], 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811524385891987*^9, 3.8115244180830917`*^9}, {
  3.8115244958917246`*^9, 3.8115245599554462`*^9}, {3.811525074588339*^9, 
  3.8115250786303587`*^9}, {3.8115251497797594`*^9, 3.8115251507211905`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"cc673b83-d021-4192-8fb9-09ad598a469e"],

Cell[BoxData[
 RowBox[{"solBs", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], 
         RowBox[{
          RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["2", "2"]}], ")"}], 
         RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "==", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8115245868387823`*^9, 3.811524610525552*^9}, {
  3.811524685143447*^9, 3.8115246855504847`*^9}, {3.811524746630966*^9, 
  3.8115247578803186`*^9}, {3.811524986460417*^9, 3.811525002836805*^9}, {
  3.8115250365217085`*^9, 3.8115250872538996`*^9}, {3.811525221030202*^9, 
  3.811525222454282*^9}, {3.8121132779338045`*^9, 3.8121132984501553`*^9}, {
  3.812113645227295*^9, 3.8121136573901863`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"125cda15-c2ef-4bb5-897d-585e8df09779"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", "solB"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", "1"}], ",", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8115246372564116`*^9, 3.8115246591111107`*^9}, {
  3.811525090543436*^9, 3.8115251574733725`*^9}, {3.8115252002738667`*^9, 
  3.8115252054539456`*^9}, {3.8121135637517405`*^9, 3.812113584331317*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"98a73762-f27f-43a5-92cc-a1ce4701309d"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
sLpKA57vy7xrg6vx/wD03ms5
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
sLpKA57vy7xrg6vx/wD03ms5
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 20}, {-0.31353044264473257`, 
            0.4864984261220406}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 20}, {-0.31353044264473257`, 0.4864984261220406}},
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
sLpKA57vy7xrg6vx/wD03ms5
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 20}, {-0.31353044264473257`, 0.4864984261220406}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.31353044264473257`, 0.4864984261220406}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.921228361788105*^9, 
  3.9212296482417407`*^9},ExpressionUUID->"e9630b32-037d-4bfb-ad39-\
0b06a0a58835"]
}, Open  ]],

Cell["\<\
Not all differential equations will have a analytic solution. The \
Endem-Chardrasekhar equation describes the density distribution of a \
spherically symmetric isothermal gas sphere subjected to its own \
gravitational force. Under isothermal assumptions, this can model the core of \
a star\
\>", "Text",
 CellChangeTimes->{{3.8115246699490023`*^9, 3.81152469808467*^9}, {
  3.811596258062251*^9, 3.8115964406175213`*^9}, {3.811596630675767*^9, 
  3.8115966331921625`*^9}, {3.811597099928013*^9, 3.8115971960654716`*^9}, {
  3.811597246184354*^9, 
  3.8115972709948397`*^9}},ExpressionUUID->"99aad0d0-526b-4316-a645-\
fa477ac9b10a"],

Cell[BoxData[
 RowBox[{"ecequ", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
        RowBox[{
         FractionBox["2", "x"], 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}]}], "\[Equal]", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"y", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "\[Epsilon]", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "\[Epsilon]", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "\[Epsilon]", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8115246699490023`*^9, 3.81152469808467*^9}, {
  3.811596258062251*^9, 3.8115964406175213`*^9}, {3.811596630675767*^9, 
  3.8115966331921625`*^9}, {3.811597099928013*^9, 3.8115971011150446`*^9}, {
  3.921232615158181*^9, 
  3.9212326163137784`*^9}},ExpressionUUID->"7ba5c56f-defd-4df1-b0a1-\
3ce739023844"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "ecequ"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Epsilon]", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8115964450874043`*^9, 3.811596471601135*^9}, {
  3.8115966694989*^9, 3.811596723985615*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"fde6f854-3d54-413e-b6c1-24f5a05f3da9"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "[", "x", "]"}]}], "]"}], "/.", "ecequ"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Epsilon]", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Xi]\>\"", ",", 
      "\"\<\[Rho]/\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8115966144418592`*^9, 3.8115966200474014`*^9}, {
  3.8115967300803804`*^9, 3.811596752541616*^9}, {3.811596883751725*^9, 
  3.8115969255627723`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0a76b53b-7295-44ec-9973-efeb81ee8778"],

Cell[TextData[{
 "where \[Xi] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", 
    SqrtBox[
     RowBox[{"4", "\[Pi]", " ", "G", " ", 
      SubscriptBox["\[Rho]", "c"], "W", " ", 
      RowBox[{
       SubscriptBox["m", "p"], "/", 
       SubscriptBox["k", "b"]}], "T"}]]}], TraditionalForm]],ExpressionUUID->
  "a8a7ef37-4323-4a3f-a1c9-b0300107b1cd"]
}], "Text",
 CellChangeTimes->{{3.811597363411373*^9, 
  3.8115974261927776`*^9}},ExpressionUUID->"5b3ab368-f6f4-46e2-ad7c-\
c4641ba624ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.8115974763360004`*^9, 
  3.8115974896765633`*^9}},ExpressionUUID->"6802d3af-df78-486f-a820-\
6bf6bcc1fb4f"],

Cell[TextData[{
 "The most useful aspect of Mathematica is defining functions. Functions are \
mathematical processes that relate a set of values ",
 StyleBox["X",
  FontSlant->"Italic"],
 " to another set of values ",
 StyleBox["Y",
  FontSlant->"Italic"],
 ". \nThere are 3 distinct ways of defining a function in Mathematica. All \
get the job done, but I prefer the last syntax."
}], "Text",
 CellChangeTimes->{{3.8115974763360004`*^9, 3.811597487256293*^9}, {
  3.8115975652413836`*^9, 3.8115977058315277`*^9}, {3.8115979965312557`*^9, 
  3.8115980003583803`*^9}},ExpressionUUID->"5d639dd8-492a-445d-ae70-\
ec5fa1a97155"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["#1", "2"], "+", 
      SuperscriptBox["#2", "2"]}], ")"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]}], ";"}], "\n", 
 RowBox[{"f", "[", 
  RowBox[{"2", ",", "3"}], "]"}], "\n", 
 RowBox[{"g", "[", 
  RowBox[{"2", ",", "3"}], "]"}], "\n", 
 RowBox[{"h", "[", 
  RowBox[{"2", ",", "3"}], "]"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"e0dca802-33d7-41b5-98e6-5752e443ffa4"],

Cell[BoxData[
 RowBox[{"x", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8123722426139584`*^9, 3.8123722505915084`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0ce7a914-1a6b-4c31-bd9b-26290d35e06d"],

Cell[TextData[StyleBox["Example Functions", "Subsection"]], "Text",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
   3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
   3.811598464141499*^9}, {3.8115985088556185`*^9, 3.811598510000295*^9}, 
   3.8116015307688847`*^9, {3.8116018107020645`*^9, 3.8116018923504543`*^9}, {
   3.8116019815298944`*^9, 
   3.811601982770906*^9}},ExpressionUUID->"9bcbb5b8-6370-4fc6-9691-\
0d1f52105978"],

Cell["\<\
You can use your function just like any other in Mathematica. Let\
\[CloseCurlyQuote]s take a look at the normal distribution\
\>", "Text",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
   3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
   3.811598464141499*^9}, {3.8115985088556185`*^9, 3.811598510000295*^9}, 
   3.8116015307688847`*^9, 3.8116018107020645`*^9, {3.81160196571766*^9, 
   3.811602031205326*^9}},ExpressionUUID->"0ad886c1-3371-4046-8d2d-\
d375db5bc035"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normal", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
      RowBox[{" ", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}]}]], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
   3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
   3.811598464141499*^9}, {3.8115985088556185`*^9, 3.811598510000295*^9}, 
   3.8116015307688847`*^9, 3.8116018107020645`*^9, {3.81160196571766*^9, 
   3.811601969429555*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"bc6b2506-7ecb-4247-87ce-3938ede11b85"],

Cell["", "Text",
 CellChangeTimes->{{3.8116019534164114`*^9, 
  3.8116019547933283`*^9}},ExpressionUUID->"77168ea4-6935-41eb-87f4-\
b68ce22f285a"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"normal", "[", 
    RowBox[{
     RowBox[{"-", "9"}], ",", "10", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "37"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.05"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
  3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
  3.811598464141499*^9}, {3.8115985088556185`*^9, 3.8115985573023167`*^9}, {
  3.8121142963762817`*^9, 3.812114373001943*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"6584505c-7480-41f0-97e1-c09239d00f1c"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"normal", "[", 
      RowBox[{"mean", ",", "var", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"mean", "-", 
        RowBox[{"4", "var"}]}], ",", 
       RowBox[{"mean", "+", 
        RowBox[{"4", "var"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mean", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"var", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
  3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
  3.811598464141499*^9}, {3.8115985088556185`*^9, 3.811598698428646*^9}, {
  3.811598874686468*^9, 3.811598879377581*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"deb61f6b-f455-43c9-843b-1d03ad7ff2ec"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"normal", "[", 
      RowBox[{"mean", ",", "var", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"mean", "-", 
        RowBox[{"5", " ", "var"}]}], ",", 
       RowBox[{"mean", "+", 
        RowBox[{"5", " ", "var"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mean", ",", 
     RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"var", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
  3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
  3.811598464141499*^9}, {3.8115985088556185`*^9, 3.811598698428646*^9}, {
  3.811598874686468*^9, 3.8115989020693083`*^9}, {3.811598936368363*^9, 
  3.8115989513217993`*^9}, {3.811598983520793*^9, 3.811599035343376*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"38ae4fa7-8f39-4312-b1f3-bcb43a387bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "lim_"}], "]"}], ":=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"normal", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"\[Mu]", "-", "lim"}], ",", 
      RowBox[{"\[Mu]", "+", "lim"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.81159800537579*^9, 3.811598172482479*^9}, {
  3.8115983191127367`*^9, 3.811598327564955*^9}, {3.81159843066996*^9, 
  3.8115984884538207`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6eb3f513-a9d9-4d68-9338-b8749b994851"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", 
   RowBox[{"0", ",", "8", ",", "16"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8115981906530037`*^9, 3.8115982359779468`*^9}, {
  3.8115983024666348`*^9, 3.8115983333044443`*^9}, {3.812114727684024*^9, 
  3.8121148335198526`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"4e5bc9c5-d4fa-425c-b672-d39fed1fed81"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"G", "[", 
    RowBox[{"4", ",", "1", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8115983414416637`*^9, 3.811598386959508*^9}, {
  3.8115987637029843`*^9, 3.811598814295246*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"f84e4dca-b3c1-4b30-b19a-2a7fc867d45e"],

Cell["You can define convenience functions:", "Text",
 CellChangeTimes->{{3.811599075406084*^9, 3.811599107982428*^9}, {
  3.8115991985247517`*^9, 3.8115991991341543`*^9}, {3.8115993076731915`*^9, 
  3.811599311208166*^9}, {3.811599426741491*^9, 3.81159947106917*^9}, {
  3.8116020521572485`*^9, 
  3.811602068248118*^9}},ExpressionUUID->"d4833709-510f-47c0-be86-\
a7d928698050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quad", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", ":=", " ", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], " ", "+", " ", 
      RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}], "\[Equal]", "0"}], ",", 
    "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tri", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], " ", ":=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["x", "3"]}], " ", "+", " ", 
      RowBox[{"b", " ", 
       SuperscriptBox["x", "2"]}], " ", "+", " ", 
      RowBox[{"c", " ", "x"}], " ", "+", "d"}], "\[Equal]", "0"}], ",", "x"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.811599075406084*^9, 3.811599107982428*^9}, {
  3.8115991985247517`*^9, 3.8115991991341543`*^9}, {3.8115993076731915`*^9, 
  3.811599311208166*^9}, {3.811599426741491*^9, 3.81159947106917*^9}, {
  3.8116020521572485`*^9, 3.8116020535266447`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1f361070-25ec-4823-b31a-d69468bc471c"],

Cell[BoxData[{
 RowBox[{"Quad", "[", 
  RowBox[{"2", ",", "7", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"Quad", "[", 
    RowBox[{"2", ",", "7", ",", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811599109943941*^9, 3.8115991364894466`*^9}, {
   3.811599203396633*^9, 3.811599204070239*^9}, {3.8115992758761806`*^9, 
   3.811599279471038*^9}, {3.8115993705166016`*^9, 3.811599376564895*^9}, 
   3.811599409464017*^9, {3.8116012467560825`*^9, 3.811601248678936*^9}, {
   3.8116012820075912`*^9, 3.8116012907367663`*^9}, {3.8116020891581707`*^9, 
   3.8116021146528234`*^9}, {3.8121149157565756`*^9, 3.8121149736644344`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"8f94a374-2ac9-42e5-a409-16be66930394"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", "x", "]"}], "/.", 
  RowBox[{
   RowBox[{"Quad", "[", 
    RowBox[{"2", ",", "7", ",", "1"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8115992057888947`*^9, 3.811599212669821*^9}, {
  3.811599255413012*^9, 3.8115992564628997`*^9}, {3.8115992938255177`*^9, 
  3.811599298572397*^9}, {3.8115993371615677`*^9, 3.8115993962680817`*^9}, {
  3.8116009911793413`*^9, 3.81160100493731*^9}, {3.8116012161685977`*^9, 
  3.8116012387041574`*^9}, {3.8116021308298435`*^9, 3.8116021486646905`*^9}, {
  3.8116022031382036`*^9, 3.8116022193721642`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"9e1ebe31-26f4-4186-8640-cdb08f02f902"],

Cell[BoxData[
 RowBox[{"trisol", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Tri", "[", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "7"}], ",", "4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8115992297687187`*^9, 3.81159924182316*^9}, {
  3.811599485471562*^9, 3.8115994916073217`*^9}, {3.8115995580733185`*^9, 
  3.8115995643714705`*^9}, {3.811600835544258*^9, 3.81160083727752*^9}, {
  3.811600883586013*^9, 3.811600907047974*^9}, {3.8116013184627056`*^9, 
  3.8116013519977093`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"fd904412-3721-4117-a156-6ce522bfaf80"],

Cell[BoxData[
 RowBox[{"trisol", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.811599511528433*^9, 3.811599520403674*^9}, 
   3.8116009171299334`*^9, {3.811601372222452*^9, 3.811601393715*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"4e74404c-b55b-407b-bc53-f38f3aaf97ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modules", "Section",
 CellChangeTimes->{{3.811602289708113*^9, 
  3.811602299171112*^9}},ExpressionUUID->"5f72409e-93c1-4160-8c71-\
1b345bc55c2f"],

Cell[TextData[{
 "Mathematica allows you to write your own ",
 StyleBox["multi-line",
  FontSlant->"Italic"],
 " functions (called ",
 StyleBox["modules",
  FontSlant->"Italic"],
 " in Wolfram language). Modules allow you to define local variables, combine \
code statements, and return values. Some examples are below."
}], "Text",
 CellChangeTimes->{{3.811602289708113*^9, 3.8116023054765253`*^9}, {
  3.8116023375925255`*^9, 3.811602364432355*^9}, {3.8116028773350534`*^9, 
  3.8116028792640657`*^9}},ExpressionUUID->"5a738e6c-d944-4b6e-a2a1-\
66a9c4054d5c"],

Cell["\<\
Writing Euclid\[CloseCurlyQuote]s algorithm for the GCD (as seen in Wolfram \
Documentation):\
\>", "Text",
 CellChangeTimes->{{3.811602289708113*^9, 3.8116023054765253`*^9}, {
  3.8116023375925255`*^9, 3.811602364432355*^9}, {3.8116028773350534`*^9, 
  3.8116028930413537`*^9}, {3.811603058834838*^9, 
  3.8116031008790865`*^9}},ExpressionUUID->"f97bbf76-7065-4845-9a57-\
b2ff39750ba5"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"gcd", "[", 
    RowBox[{"m0_", ",", "n0_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", "=", "m0"}], ",", 
       RowBox[{"n", "=", "n0"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"n", " ", "\[NotEqual]", " ", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", "n"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Mod", "[", 
            RowBox[{"m", ",", "n"}], "]"}]}], "}"}]}]}], "]"}], ";", "m"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.811602289708113*^9, 3.8116023054765253`*^9}, {
  3.8116023375925255`*^9, 3.811602364432355*^9}, {3.8116028773350534`*^9, 
  3.8116028930413537`*^9}, {3.811603058834838*^9, 3.811603272167839*^9}, {
  3.811603306459937*^9, 3.81160339501417*^9}, {3.8116037235081787`*^9, 
  3.811603752441064*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6fb1a982-f1b1-48bc-a3dc-a196287e7f66"],

Cell[BoxData[
 RowBox[{"gcd", "[", 
  RowBox[{"1800", ",", "3645"}], "]"}]], "Input",
 CellChangeTimes->{{3.811602289708113*^9, 3.8116023054765253`*^9}, {
  3.8116023375925255`*^9, 3.811602364432355*^9}, {3.8116028773350534`*^9, 
  3.8116028930413537`*^9}, {3.811603058834838*^9, 3.8116032222705183`*^9}, {
  3.8116032829350414`*^9, 3.8116032876333923`*^9}, {3.8116037896562853`*^9, 
  3.8116037937293234`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0804f33a-2a1d-4e83-aba7-a11b9f5bec85"],

Cell["\<\
You can functions to calculate projectile motion calculations:\
\>", "Text",
 CellChangeTimes->{{3.811602439736924*^9, 3.81160244294193*^9}, {
  3.811602539237028*^9, 3.811602572912998*^9}, {3.8116026558441696`*^9, 
  3.8116026569596696`*^9}, {3.8116038354746523`*^9, 
  3.8116038723162894`*^9}},ExpressionUUID->"21301b11-4d04-497c-b0a1-\
9288c611c3f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"moonProj", "[", 
    RowBox[{"v_", ",", "\[Theta]_", ",", "h_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "=", "1.6"}], ",", 
       RowBox[{"th", "=", 
        RowBox[{"\[Pi]", "*", 
         FractionBox["\[Theta]", "180"]}]}]}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"R", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["v", "2"], " ", 
          RowBox[{"Cos", "[", "th", "]"}], " ", 
          RowBox[{"Sin", "[", "th", "]"}]}], "g"], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox["v", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "th", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "th", "]"}], "2"]}], 
            SuperscriptBox["g", "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "h", " ", 
             SuperscriptBox["v", 
              RowBox[{"2", " "}]], 
             SuperscriptBox[
              RowBox[{"Cos", "[", "th", "]"}], "2"]}], "g"]}], ")"}]}]}]}], 
      ";", " ", "\[IndentingNewLine]", 
      RowBox[{"vf", " ", "=", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["v", "2"], "+", 
         RowBox[{"2", "*", "g", "*", "h"}]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"time", "=", " ", 
       RowBox[{
        RowBox[{
         FractionBox["v", "g"], 
         RowBox[{"Sin", "[", "th", "]"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["g", "2"]], 
           RowBox[{"Sin", "[", "th", "]"}]}], "+", 
          RowBox[{"2", " ", 
           FractionBox["h", "g"]}]}]]}]}], ";", " ", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"R", ",", "time", ",", "vf"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.811602439736924*^9, 3.81160244294193*^9}, {
  3.811602539237028*^9, 3.811602572912998*^9}, {3.8116026558441696`*^9, 
  3.8116026569596696`*^9}, {3.8116038354746523`*^9, 3.81160383772042*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"f2db094f-d93e-4544-8f98-82fd4ca58c85"],

Cell[BoxData[
 RowBox[{"moonProj", "[", 
  RowBox[{"40", ",", "60", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.811602457712234*^9, 3.811602496568078*^9}, {
   3.8116025478965244`*^9, 3.8116025597437553`*^9}, 
   3.921231430775157*^9},ExpressionUUID->"8fdc9c80-e216-465b-9792-\
cf70f0d05853"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial Differential Equations", "Section",
 CellChangeTimes->{{3.811602457712234*^9, 3.811602496568078*^9}, {
   3.8116025478965244`*^9, 3.8116025597437553`*^9}, 3.921231430775157*^9, {
   3.9212315064543943`*^9, 3.9212316312800393`*^9}, {3.9212316783670115`*^9, 
   3.921231856083455*^9}, {3.9212320228846474`*^9, 
   3.921232065353632*^9}},ExpressionUUID->"c441d8f1-9113-4212-8cab-\
28259dffc72f"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s look at defining functions from analytical solutions \
to differential equations. You would like to do this to graph the solutions \
in interesting ways. Let\[CloseCurlyQuote]s look the 2D radial wave equation.\
\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["r", "TI"], 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            StyleBox["u", "TI"], 
            RowBox[{"(", 
              RowBox[{
                StyleBox["r", "TI"], ",", 
                StyleBox["t", "TI"]}], ")"}]}], 
          RowBox[{"\[PartialD]", 
            SuperscriptBox[
             StyleBox["t", "TI"], "2"]}]], "\[LongEqual]", 
         FractionBox["\[PartialD]", 
          RowBox[{"\[PartialD]", 
            StyleBox["r", "TI"]}]], 
         RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
              StyleBox["u", "TI"], 
              RowBox[{"(", 
                RowBox[{
                  StyleBox["r", "TI"], ",", 
                  StyleBox["t", "TI"]}], ")"}]}], 
            RowBox[{"\[PartialD]", 
              StyleBox["r", "TI"]}]], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "r\\frac{\\partial^2 u(r,t)}{\\partial t^2} = \
\\frac{\\partial}{\\partial r}\\left( \\frac{\\partial u(r,t)}{\\partial \
r}\\right)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "27233e93-cf5c-44a8-9c41-c61229f68628"]
}], "Text",
 CellChangeTimes->{{3.811602457712234*^9, 3.811602496568078*^9}, {
   3.8116025478965244`*^9, 3.8116025597437553`*^9}, 3.921231430775157*^9, {
   3.9212315064543943`*^9, 3.9212316312800393`*^9}, {3.9212316783670115`*^9, 
   3.921231856083455*^9}, 
   3.9212320228846474`*^9},ExpressionUUID->"668964e6-456d-490f-838a-\
fd514179661a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eqn", "=", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"r", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "==", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"r", ",", "t"}], "]"}], ",", "r"}], "]"}]}], ",", "r"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"dsol", "=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", ",", " ", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"r", ",", "0"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", 
            RowBox[{"0", ",", "1"}], "]"}], "[", "u", "]"}], "[", 
          RowBox[{"r", ",", "0"}], "]"}], "==", "1"}]}], "}"}], ",", 
      RowBox[{"u", "[", 
       RowBox[{"r", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "t"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9212308065434*^9, 3.921230820743885*^9}, {
   3.9212309922605314`*^9, 3.921231032930282*^9}, 3.9212315894714203`*^9, {
   3.921231891377994*^9, 3.921231940532336*^9}, {3.9212319948942924`*^9, 
   3.921232006540244*^9}, {3.9212320731303387`*^9, 3.92123207376263*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8d2dab2a-a6ed-4cc7-a7f7-1d64affeec84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
    TemplateBox[{
      FractionBox[
       RowBox[{"2", " ", 
         RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", 
             RowBox[{"r", " ", 
               RowBox[{"BesselJZero", "[", 
                 RowBox[{"0", ",", 
                   RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], "]"}], " ", 
         RowBox[{"BesselJ", "[", 
           RowBox[{"1", ",", 
             RowBox[{"BesselJZero", "[", 
               RowBox[{"0", ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
           RowBox[{"t", " ", 
             RowBox[{"BesselJZero", "[", 
               RowBox[{"0", ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "]"}]}], 
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             SuperscriptBox[
              RowBox[{"BesselJ", "[", 
                RowBox[{"0", ",", 
                  RowBox[{"BesselJZero", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"BesselJ", "[", 
                RowBox[{"1", ",", 
                  RowBox[{"BesselJZero", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "]"}], "2"]}], 
           ")"}], " ", 
         SuperscriptBox[
          RowBox[{"BesselJZero", "[", 
            RowBox[{"0", ",", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"]}]], 
      RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], 
         RowBox[{#2, "=", #3}], #4], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], "}"}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.921231037290366*^9, 3.9212311410409265`*^9, {3.92123194876614*^9, 
   3.921232008959824*^9}, 3.9212320864598894`*^9, 3.9212325103472548`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"15b8dc81-9863-40ba-a767-fc789f8fa668"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"r_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"r", ",", "t"}], "]"}], "/.", " ", 
      RowBox[{"dsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "/.", " ", 
     RowBox[{"{", 
      RowBox[{"\[Infinity]", "->", "3"}], "}"}]}], "//", "Activate"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.921231058133607*^9, 3.921231058133607*^9}, {
  3.9212323620952263`*^9, 3.9212323962775583`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c5bbe476-3df9-432c-a87f-c44f76df34db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"h", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "+", 
           RowBox[{"y", "^", "2"}]}], "]"}], ",", "t"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"Mesh", "->", "True"}], ",", 
      RowBox[{"PlotStyle", "->", "Yellow"}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"ImageSize", "->", "Medium"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10.45", ",", "0.05"}], "}"}]}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.9212312362203455`*^9, 3.9212312362203455`*^9}, 
   3.9212324242304287`*^9, 3.921232471600199*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"52fc7c1b-50ae-4055-a6cb-c41053b46aa0"],

Cell["\<\
Google Gemini produced an alternative for me that makes the membrane \
explicitly circular\
\>", "Text",
 CellChangeTimes->{{3.9212323022236276`*^9, 
  3.92123234828214*^9}},ExpressionUUID->"690b8294-5232-4846-8136-\
d8930d1f281d"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{"r", "->", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
       RowBox[{"Disk", "[", "]"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"Mesh", "->", "True"}], ",", 
      RowBox[{"MeshStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", "Yellow"}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"ImageSize", "->", "Medium"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Orange", ",", "0.85"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10.45", ",", "0.05"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9212323022236276`*^9, 3.921232305339592*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"55b6d55b-915f-48cd-b169-04e23e716de4"]
}, Open  ]]
},
WindowSize->{1794, 869},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ddcf5d46-af1a-4e7e-961a-361d91058da5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 129, 3, 31, "Input",ExpressionUUID->"0e5bcdbe-e139-4030-882a-78bdbe3a3354"],
Cell[CellGroupData[{
Cell[712, 27, 157, 3, 74, "Section",ExpressionUUID->"3c2b8110-8fe5-4e33-a55c-a7c477a550e9"],
Cell[872, 32, 337, 7, 38, "Text",ExpressionUUID->"68b97a41-515e-4f86-aab1-b85301d11d3e"],
Cell[CellGroupData[{
Cell[1234, 43, 220, 4, 59, "Subsection",ExpressionUUID->"da9d893b-a823-4cf0-95ec-03013386f495"],
Cell[1457, 49, 800, 18, 94, "Input",ExpressionUUID->"d777dd1b-aade-45d7-a3d1-b098fc74a0de"],
Cell[2260, 69, 705, 16, 54, "Input",ExpressionUUID->"323a9c41-9e44-4956-a7e8-c69b21c083ab"],
Cell[2968, 87, 529, 15, 54, "Input",ExpressionUUID->"ebf00bf5-ddee-416a-90b7-ea15250263a1"],
Cell[3500, 104, 193, 4, 41, "Input",ExpressionUUID->"24fee88f-d6d5-4fd3-b920-e12cbccc2827"],
Cell[3696, 110, 438, 10, 52, "Input",ExpressionUUID->"2508b9a9-aacb-4626-a050-2c7dfa2b9aa3"],
Cell[4137, 122, 962, 27, 108, "Input",ExpressionUUID->"61cb2c26-f78e-4c62-9f0c-1bc1f2c378cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5136, 154, 223, 4, 59, "Subsection",ExpressionUUID->"8ba01efd-8b8d-47c6-aeb4-f398f9565210"],
Cell[5362, 160, 532, 9, 63, "Text",ExpressionUUID->"11565571-9be4-4203-9694-5928d8f8e223"],
Cell[5897, 171, 904, 23, 34, "Input",ExpressionUUID->"cc673b83-d021-4192-8fb9-09ad598a469e"],
Cell[6804, 196, 1345, 33, 34, "Input",ExpressionUUID->"125cda15-c2ef-4bb5-897d-585e8df09779"],
Cell[CellGroupData[{
Cell[8174, 233, 714, 19, 31, "Input",ExpressionUUID->"98a73762-f27f-43a5-92cc-a1ce4701309d"],
Cell[8891, 254, 63528, 1086, 252, "Output",ExpressionUUID->"e9630b32-037d-4bfb-ad39-0b06a0a58835"]
}, Open  ]],
Cell[72434, 1343, 644, 12, 63, "Text",ExpressionUUID->"99aad0d0-526b-4316-a645-fa477ac9b10a"],
Cell[73081, 1357, 1132, 31, 49, "Input",ExpressionUUID->"7ba5c56f-defd-4df1-b0a1-3ce739023844"],
Cell[74216, 1390, 516, 12, 31, "Input",ExpressionUUID->"fde6f854-3d54-413e-b6c1-24f5a05f3da9"],
Cell[74735, 1404, 693, 18, 31, "Input",ExpressionUUID->"0a76b53b-7295-44ec-9973-efeb81ee8778"],
Cell[75431, 1424, 491, 15, 45, "Text",ExpressionUUID->"5b3ab368-f6f4-46e2-ad7c-c4641ba624ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75971, 1445, 158, 3, 74, "Section",ExpressionUUID->"6802d3af-df78-486f-a820-6bf6bcc1fb4f"],
Cell[76132, 1450, 626, 14, 63, "Text",ExpressionUUID->"5d639dd8-492a-445d-ae70-ec5fa1a97155"],
Cell[76761, 1466, 924, 30, 142, "Input",ExpressionUUID->"e0dca802-33d7-41b5-98e6-5752e443ffa4"],
Cell[77688, 1498, 210, 3, 52, "Input",ExpressionUUID->"0ce7a914-1a6b-4c31-bd9b-26290d35e06d"],
Cell[77901, 1503, 472, 7, 45, "Text",ExpressionUUID->"9bcbb5b8-6370-4fc6-9691-0d1f52105978"],
Cell[78376, 1512, 521, 9, 38, "Text",ExpressionUUID->"0ad886c1-3371-4046-8d2d-d375db5bc035"],
Cell[78900, 1523, 926, 24, 60, "Input",ExpressionUUID->"bc6b2506-7ecb-4247-87ce-3938ede11b85"],
Cell[79829, 1549, 146, 3, 38, "Text",ExpressionUUID->"77168ea4-6935-41eb-87f4-b68ce22f285a"],
Cell[79978, 1554, 699, 16, 31, "Input",ExpressionUUID->"6584505c-7480-41f0-97e1-c09239d00f1c"],
Cell[80680, 1572, 897, 22, 31, "Input",ExpressionUUID->"deb61f6b-f455-43c9-843b-1d03ad7ff2ec"],
Cell[81580, 1596, 1109, 26, 31, "Input",ExpressionUUID->"38ae4fa7-8f39-4312-b1f3-bcb43a387bb3"],
Cell[82692, 1624, 647, 15, 31, "Input",ExpressionUUID->"6eb3f513-a9d9-4d68-9338-b8749b994851"],
Cell[83342, 1641, 366, 7, 31, "Input",ExpressionUUID->"4e5bc9c5-d4fa-425c-b672-d39fed1fed81"],
Cell[83711, 1650, 401, 9, 31, "Input",ExpressionUUID->"f84e4dca-b3c1-4b30-b19a-2a7fc867d45e"],
Cell[84115, 1661, 379, 6, 38, "Text",ExpressionUUID->"d4833709-510f-47c0-be86-a7d928698050"],
Cell[84497, 1669, 1147, 29, 58, "Input",ExpressionUUID->"1f361070-25ec-4823-b31a-d69468bc471c"],
Cell[85647, 1700, 822, 15, 52, "Input",ExpressionUUID->"8f94a374-2ac9-42e5-a409-16be66930394"],
Cell[86472, 1717, 704, 13, 31, "Input",ExpressionUUID->"9e1ebe31-26f4-4186-8640-cdb08f02f902"],
Cell[87179, 1732, 592, 11, 31, "Input",ExpressionUUID->"fd904412-3721-4117-a156-6ce522bfaf80"],
Cell[87774, 1745, 322, 6, 31, "Input",ExpressionUUID->"4e74404c-b55b-407b-bc53-f38f3aaf97ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88133, 1756, 152, 3, 74, "Section",ExpressionUUID->"5f72409e-93c1-4160-8c71-1b345bc55c2f"],
Cell[88288, 1761, 561, 13, 38, "Text",ExpressionUUID->"5a738e6c-d944-4b6e-a2a1-66a9c4054d5c"],
Cell[88852, 1776, 397, 8, 38, "Text",ExpressionUUID->"f97bbf76-7065-4845-9a57-b2ff39750ba5"],
Cell[89252, 1786, 1076, 28, 52, "Input",ExpressionUUID->"6fb1a982-f1b1-48bc-a3dc-a196287e7f66"],
Cell[90331, 1816, 489, 8, 31, "Input",ExpressionUUID->"0804f33a-2a1d-4e83-aba7-a11b9f5bec85"],
Cell[90823, 1826, 363, 7, 38, "Text",ExpressionUUID->"21301b11-4d04-497c-b0a1-9288c611c3f0"],
Cell[91189, 1835, 2346, 65, 144, "Input",ExpressionUUID->"f2db094f-d93e-4544-8f98-82fd4ca58c85"],
Cell[93538, 1902, 299, 6, 31, "Input",ExpressionUUID->"8fdc9c80-e216-465b-9792-cf70f0d05853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93874, 1913, 406, 6, 74, "Section",ExpressionUUID->"c441d8f1-9113-4212-8cab-28259dffc72f"],
Cell[94283, 1921, 1879, 46, 82, "Text",ExpressionUUID->"668964e6-456d-490f-838a-fd514179661a"],
Cell[CellGroupData[{
Cell[96187, 1971, 1690, 46, 73, "Input",ExpressionUUID->"8d2dab2a-a6ed-4cc7-a7f7-1d64affeec84"],
Cell[97880, 2019, 2386, 62, 63, "Output",ExpressionUUID->"15b8dc81-9863-40ba-a767-fc789f8fa668"]
}, Open  ]],
Cell[100281, 2084, 610, 17, 31, "Input",ExpressionUUID->"c5bbe476-3df9-432c-a87f-c44f76df34db"],
Cell[100894, 2103, 1326, 35, 73, "Input",ExpressionUUID->"52fc7c1b-50ae-4055-a6cb-c41053b46aa0"],
Cell[102223, 2140, 241, 6, 38, "Text",ExpressionUUID->"690b8294-5232-4846-8136-d8930d1f281d"],
Cell[102467, 2148, 1555, 41, 52, "Input",ExpressionUUID->"55b6d55b-915f-48cd-b169-04e23e716de4"]
}, Open  ]]
}
]
*)

